!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?module.exports=e():t.Darblast=e()}(this,(function(){!function(t){class e{constructor(t,e,i){this.source=t,this.width=e,this.height=i}static fromImage(t){return new e(t,t.width,t.height)}static fromVideo(t){return new e(t,t.videoWidth,t.videoHeight)}draw(t){t.drawImage(this.source,0,0,this.width,this.height)}}t.Frame=e;t.Canvas=class{constructor(t){this.element=t;const e=t.getContext("2d");if(!e)throw new Error("failed to initialize the HTML5 canvas");this.context=e}get width(){return this.element.width}get height(){return this.element.height}}}(l||(l={}));l.Frame,l.Canvas;function t(t,e){t.length=e.length;for(let i=0;i<t.length;i++)t[i]=e[i]}!function(t){t.Animation=class{constructor(t,e,i,s){if(t.length<1)throw new Error("there must be at least one frame");if(e<1)throw new Error(`invalid frame duration: ${e} -- must be a whole positive number`);if(this.frames=t,this.frameDuration=e,this.x0=i,this.y0=s,this.width=this.frames[0].width,this.height=this.frames[0].height,this.frames.some(t=>t.width!==this.width||t.height!==this.height,this))throw new Error("inconsistent frame sizes")}getFrame(t,e){const i=Math.floor((e-t)/this.frameDuration);return this.frames[i%this.frames.length]}};class e{constructor(t,e,i="default"){if(this.animations=Object.create(null),!(i in e))throw new Error(`invalid state: ${JSON.stringify(i)}`);this.name=t,this.defaultState=i;for(const t in e)e.hasOwnProperty(t)&&(this.animations[t]=e[t])}static createStatic(i,s,n=0,r=0){return new e(i,{default:new t.Animation([s],1,0,0)},"default")}get states(){return Object.keys(this.animations)}isValidState(t){return t in this.animations}}t.Character=e}(l||(l={}));l.Character;!function(t){let e;!function(t){class e{constructor(t,e){this.height=1,this.left=null,this.right=null,this.key=t,this.value=e}}class i{constructor(t=i.defaultCompare){this._root=null,this._size=0,this._compare=t}static defaultCompare(t,e){return t<e?-1:t>e?1:0}static from(t,e=i.defaultCompare){const s=new i(e);for(const[e,i]of t)s.insert(e,i);return s}get size(){return this._size}get isEmpty(){return!this._root}_getHeight(t){return t?t.height:0}get height(){return this._getHeight(this._root)}getMinimum(){let t=this._root;for(;t&&t.left;)t=t.left;return t?[t.key,t.value]:null}getMaximum(){let t=this._root;for(;t&&t.right;)t=t.right;return t?[t.key,t.value]:null}*_enumerateKeys(t){t&&(yield*this._enumerateKeys(t.left),yield t.key,yield*this._enumerateKeys(t.right))}get keys(){return this._enumerateKeys(this._root)}*_enumerateValues(t){t&&(yield*this._enumerateValues(t.left),yield t.value,yield*this._enumerateValues(t.right))}get values(){return this._enumerateValues(this._root)}lookup(t){let e=this._root;for(;e;){const i=this._compare(t,e.key);if(i<0)e=e.left;else{if(!(i>0))return[e.key,e.value];e=e.right}}return null}lookupValue(t){let e=this._root;for(;e;){const i=this._compare(t,e.key);if(i<0)e=e.left;else{if(!(i>0))return e.value;e=e.right}}return null}contains(t){let e=this._root;for(;e;){const i=this._compare(t,e.key);if(i<0)e=e.left;else{if(!(i>0))return!0;e=e.right}}return!1}*_scan(t,e,i){if(t){const s=e?this._compare(t.key,e):1,n=i?this._compare(t.key,i):-1;s<0?yield*this._scan(t.right,e,i):n>=0?yield*this._scan(t.left,e,i):(yield*this._scan(t.left,e,null),yield[t.key,t.value],yield*this._scan(t.right,null,i))}}scan(t=null,e=null){return this._scan(this._root,t,e)}[Symbol.iterator](){return this.scan(null,null)}_updateHeight(t){t.height=1+Math.max(this._getHeight(t.left),this._getHeight(t.right))}_rebalanceHeavyLeft(t){if(this._getHeight(t.left)>this._getHeight(t.right)+1){const e=t.left;return t.left=e.right,e.right=t,this._updateHeight(t),this._updateHeight(e),e}return this._updateHeight(t),t}_rebalanceHeavyRight(t){if(this._getHeight(t.right)>this._getHeight(t.left)+1){const e=t.right;return t.right=e.left,e.left=t,this._updateHeight(t),this._updateHeight(e),e}return this._updateHeight(t),t}_insert(t,i,s){if(t){const e=this._compare(i,t.key);return e<0?(t.left=this._insert(t.left,i,s),this._rebalanceHeavyLeft(t)):e>0?(t.right=this._insert(t.right,i,s),this._rebalanceHeavyRight(t)):(t.value=s,t)}return this._size++,new e(i,s)}insert(t,e){this._root=this._insert(this._root,t,e)}insertAll(t){for(const[e,i]of t)this.insert(e,i)}_remove(t,e){if(t){const i=this._compare(e,t.key);return i<0?(t.left=this._remove(t.left,e),this._rebalanceHeavyRight(t)):i>0?(t.right=this._remove(t.right,e),this._rebalanceHeavyLeft(t)):(this._size--,null)}return null}remove(t){this._root=this._remove(this._root,t)}removeAll(t){for(const e of t)this.remove(e)}removeIf(t,e=null){[...this.keys].forEach(i=>{t.call(e,i)&&this.remove(i)},this)}clear(){this._root=null,this._size=0}_clone(t){if(t){const i=new e(t.key,t.value);return i.left=this._clone(t.left),i.right=this._clone(t.right),i.height=t.height,i}return null}clone(){const t=new i(this._compare);return t._root=this._clone(this._root),t._size=this._size,t}INTERNAL_swap(t){const e=this._root;this._root=t._root,t._root=e;const i=this._size;this._size=t._size,t._size=i}map(t,e=null){const s=new i(this._compare);for(const[i,n]of this)s.insert(i,t.call(e,i,n));return s}filter(t,e=null){const s=new i(this._compare);for(const[i,n]of this)t.call(e,i,n)&&s.insert(i,n);return s}}t.OrderedMap=i}(e=t.Collections||(t.Collections={}))}(l||(l={}));l.Collections.OrderedMap;!function(t){let e;!function(t){class e{constructor(i=e.defaultCompare){this._map=new t.OrderedMap(i)}static defaultCompare(t,e){return t<e?-1:t>e?1:0}static from(t,i=e.defaultCompare){const s=new e(i);for(const e of t)s.insert(e);return s}get size(){return this._map.size}get isEmpty(){return this._map.isEmpty}get height(){return this._map.height}getMinimum(){const t=this._map.getMinimum();if(t){const[e]=t;return e}return null}getMaximum(){const t=this._map.getMaximum();if(t){const[e]=t;return e}return null}contains(t){return this._map.contains(t)}*scan(t=null,e=null){for(const[i]of this._map.scan(t,e))yield i}[Symbol.iterator](){return this.scan(null,null)}insert(t){this._map.insert(t,!0)}insertAll(t){for(const e of t)this._map.insert(e,!0)}remove(t){this._map.remove(t)}removeAll(t){this._map.removeAll(t)}removeIf(t,e=null){this._map.removeIf(t,e)}clear(){this._map.clear()}clone(){const t=new e(this._compare);return t._map.INTERNAL_swap(this._map.clone()),t}map(t,i=null){const s=new e(e.defaultCompare);for(const e of this)s.insert(t.call(i,e));return s}filter(t,i=null){const s=new e(this._compare);for(const e of this)t.call(i,e)&&s.insert(e);return s}union(t){const e=this.clone();return e.insertAll(t),e}intersection(t){const i=new e(this._compare);if(t.isEmpty)return i;const s=t.getMinimum(),n=this.scan(s),r=t[Symbol.iterator]();let o=n.next(),h=r.next();for(;!o.done&&!h.done;){const t=o.value,e=h.value,s=this._compare(t,e);s||i.insert(t),s<=0&&(o=n.next()),s>=0&&(h=r.next())}return i}difference(t){const i=new e(this._compare),s=this[Symbol.iterator](),n=t[Symbol.iterator]();let r=s.next(),o=n.next();for(;!r.done;){const t=r.value;if(o.done)i.insert(t),r=s.next();else{const e=o.value,h=this._compare(t,e);h<0?(i.insert(t),r=s.next()):(h>0||(r=s.next()),o=n.next())}}return i}symmetricDifference(t){const i=new e(this._compare),s=this[Symbol.iterator](),n=t[Symbol.iterator]();let r=s.next(),o=n.next();for(;!r.done;){const t=r.value;if(o.done)i.insert(t),r=s.next();else{const e=o.value,h=this._compare(t,e);h<0?(i.insert(t),r=s.next()):h>0?(i.insert(e),o=n.next()):(r=s.next(),o=n.next())}}for(;!o.done;){const t=o.value;i.insert(t),o=n.next()}return i}}t.OrderedSet=e}(e=t.Collections||(t.Collections={}))}(l||(l={}));const e=l.Collections.OrderedSet;!function(t){let e;!function(t){class e{constructor(t=e.defaultCompare){this._data=[],this._compare=t}static defaultCompare(t,e){return t<e}static from(t,i=e.defaultCompare){const s=new e(i);return s.pushAll(t),s}get size(){return this._data.length}get isEmpty(){return!this._data.length}get height(){return Math.ceil(Math.log2(this._data.length+1))}get top(){if(this._data.length)return this._data[0];throw new Error("empty heap")}_compareElements(t,e){return this._compare(this._data[t],this._data[e])}_swap(t,e){const i=this._data[t];this._data[t]=this._data[e],this._data[e]=i}push(t){let e=this._data.length;this._data.push(t);let i=Math.floor((e-1)/2);for(;e>0&&this._compareElements(e,i);)this._swap(e,i),e=i,i=Math.floor((e-1)/2)}pushAll(t){for(const e of t)this.push(e)}_siftDown(t){const e=2*t+1,i=2*t+2;if(e<this._data.length)if(i>=this._data.length||this._compareElements(e,i)){if(this._compareElements(e,t))return this._swap(t,e),e}else if(i<this._data.length&&this._compareElements(i,t))return this._swap(t,i),i;return-1}pop(){if(this._data.length){const t=this._data[0];this._data[0]=this._data[this._data.length-1],this._data.length--;for(let t=0;t>=0;t=this._siftDown(t));return t}throw new Error("empty heap")}clear(){this._data.length=0}clone(){const t=new e(this._compare);return t._data.push.apply(t._data,this._data),t}}t.Heap=e}(e=t.Collections||(t.Collections={}))}(l||(l={}));const i=l.Collections.Heap;!function(t){class s{constructor(){this._data=Object.create(null)}static _compare(t,e){return t.id-e.id}insert(t,i){for(const n in t)if(t.hasOwnProperty(n)){n in this._data||(this._data[n]=Object.create(null));const r=t[n];r in this._data[n]||(this._data[n][r]=new e(s._compare)),this._data[n][r].insert(i)}}query(t){const n=new i((t,e)=>t.size<e.size);for(const e in t)if(t.hasOwnProperty(e)&&e in this._data){const i=t[e];i in this._data[e]&&n.push(this._data[e][i])}if(n.size>0){const t=n.pop();for(;!n.isEmpty;){if(t.isEmpty)return t;const e=n.pop();if(e.isEmpty)return e;t.removeAll(e)}return t}return new e(s._compare)}remove(t){const e=this.query(t);for(const i in t)if(t.hasOwnProperty(i)&&i in this._data){const s=t[i];s in this._data[i]&&this._data[i][s].removeAll(e)}return[...e]}*enumerate(t){const e=[];for(const i in t)if(t.hasOwnProperty(i)&&i in this._data){const s=t[i];s in this._data[i]&&e.push(this._data[i][s][Symbol.iterator]())}const i=e.map(t=>t.next());for(;i.every(t=>!t.done);){let t=null,s=!1;for(let e=0;e<i.length;e++){const n=i[e].value;t?n.id<t.id&&(t=n,s=!1):(t=n,s=!0)}s&&(yield t);for(let s=0;s<i.length;s++){const[n]=i[s].value;n<=t.id&&(i[s]=e[s].next())}}}}t.Database=s}(l||(l={}));l.Database;!function(t){t.View=class{constructor(t,e,i){if(this.x=0,this.y=0,3!==t.length||t.some(t=>3!==t.length))throw Error("invalid matrix size, must be 3x3");this.matrix=t,this.width=e,this.height=i}project(t){const e=this.matrix;t.x=t.i*e[0][0]+t.j*e[0][1]+t.k*e[0][2],t.y=t.i*e[1][0]+t.j*e[1][1]+t.k*e[1][2],t.z=t.i*e[2][0]+t.j*e[2][1]+t.k*e[2][2]}}}(l||(l={}));l.View;class s{constructor(){this._nextId=0,this._stash=[]}claim(){return this._stash.length>0?this._stash.pop():this._nextId++}release(t){this._stash.push(t)}}let n=(()=>{class t{constructor(e,i,s,n,r,o){this._timestamp=Date.now(),this.visible=!0,this.opacity=1,this._m00=1,this._m01=0,this._m02=0,this._m10=0,this._m11=1,this._m12=0,this.treeHeight=1,this.leftChild=null,this.rightChild=null,this._tree=e,this.id=t._idGenerator.claim(),this.character=i,this._state=s,this._i=n,this._j=r,this._k=o,this._project()}get state(){return this._state}set state(t){if(!(t in this.character.animations))throw new Error(`invalid state: ${JSON.stringify(t)}`);{const e=this._state;this._state=t,t!==e&&this._project()}}get animation(){return this.character.animations[this._state]}_reindex(){const t=this.animation;this._tree.remove(this);const e=t.width,i=t.height,s=this._x,n=this._x+e,r=this._y,o=this._y+i,h=Math.round(this._m00*s+this._m01*r+this._m02),l=Math.round(this._m00*s+this._m01*r+this._m02),a=Math.round(this._m00*n+this._m01*r+this._m02),_=Math.round(this._m00*n+this._m01*r+this._m02),u=Math.round(this._m00*s+this._m01*o+this._m02),c=Math.round(this._m00*s+this._m01*o+this._m02),d=Math.round(this._m00*n+this._m01*o+this._m02),m=Math.round(this._m00*n+this._m01*o+this._m02);this._x0=Math.min(h,a,u,d),this._y0=Math.min(l,_,c,m),this._x1=Math.max(h,a,u,d),this._y1=Math.max(l,_,c,m),this._tree.insert(this)}_project(){const t=this.animation;let e=this._tree.view.matrix;this._x=t.x0+this._i*e[0][0]+this._j*e[0][1]+this._k*e[0][2],this._y=t.y0+this._i*e[1][0]+this._j*e[1][1]+this._k*e[1][2],this._z=this._i*e[2][0]+this._j*e[2][1]+this._k*e[2][2],this._reindex()}get i(){return this._i}set i(t){this._i=t,this._project()}get j(){return this._j}set j(t){this._j=t,this._project()}get k(){return this._k}set k(t){this._k=t,this._project()}get x(){return this._x}get y(){return this._y}get width(){return this.animation.width}get height(){return this.animation.height}moveTo(t,e,i){this._i=t,this._j=e,this._k=i,this._project()}moveBy(t,e,i){this._i+=t,this._j+=e,this._k+=i,this._project()}get x0(){return this._x0}get y0(){return this._y0}get x1(){return this._x1}get y1(){return this._y1}get z(){return this._z}setTransform(t,e,i,s,n,r){this._m00=t,this._m01=e,this._m02=i,this._m10=s,this._m11=n,this._m12=r,this._reindex()}transform(t,e,i,s,n,r){this._m00=this._m00*t+this._m01*s,this._m01=this._m00*e+this._m01*n,this._m02=this._m00*i+this._m01*r+this._m02,this._m10=this._m10*t+this._m11*s,this._m11=this._m10*e+this._m11*n,this._m12=this._m10*i+this._m11*r+this._m12,this._reindex()}resetTransform(){this._m00=1,this._m01=0,this._m02=0,this._m10=0,this._m11=1,this._m12=0,this._reindex()}rotate(t,e,i){const s=Math.sin(t),n=Math.cos(t);this._m00=n,this._m01=-s,this._m02=e-e*n+i*s,this._m10=s,this._m11=n,this._m12=i-e*s-i*n,this._reindex()}getFrame(t){return this.animation.getFrame(this._timestamp,t)}draw(t,e){this.visible&&(t.globalAlpha=this.opacity,t.setTransform(this._m00,this._m10,this._m01,this._m11,this._m02,this._m12),this.getFrame(e).draw(t))}remove(){this._tree.remove(this)}}return t._idGenerator=new s,t})();class r{constructor(){this._heap=new i((function(t,e){return t.z<e.z||!(t.z>e.z)&&t.id<e.id}))}_queueLeft(t){const e=t.leftChild;e&&(e.x1<this._x0?t.x1>=this._x0&&this._queueRight(e):e.x1>=this._x1?this._queueLeft(e):e.y1<this._y0?(this._queueLeft(e),(t.x1>e.x1||t.y1>=this._y0)&&this._queueRight(e)):e.y1>=this._y1?(this._queueLeft(e),t.x1>e.x1&&this._queueRight(e)):(this._queueLeft(e),this._heap.push(e),this._queueRight(e)))}_queueRight(t){const e=t.rightChild;e&&(e.x1<this._x0?this._queueRight(e):e.x1>=this._x1?t.x1<this._x1&&this._queueLeft(e):e.y1<this._y0?(t.x1<e.x1&&this._queueLeft(e),this._queueRight(e)):e.y1>=this._y1?((t.x1<e.x1||t.y1<this._y1)&&this._queueLeft(e),this._queueRight(e)):(this._queueLeft(e),this._heap.push(e),this._queueRight(e)))}_queue(t){t&&(t.x1<this._x0?this._queueRight(t):t.x1>=this._x1?this._queueLeft(t):(this._queueLeft(t),t.y1>=this._y0&&t.y1<this._y1&&this._heap.push(t),this._queueRight(t)))}_render(){for(;!this._heap.isEmpty;)this._heap.pop().draw(this._context,this._timestamp)}render(t,e,i,s,n,r,o){this._context=t,this._x0=e,this._y0=i,this._x1=s,this._y1=n,this._timestamp=o,this._heap.clear(),this._queue(r),this._render()}}class o{constructor(t){this._root=null,this._renderContext=new r,this.view=t}static _compare(t,e){return t.x0<e.x0?-1:t.x0>e.x0?1:t.y0<e.y0?-1:t.y0>e.y0?1:t.id<e.id?-1:t.id>e.id?1:0}_getHeight(t){return t?t.treeHeight:0}_updateHeight(t){t.treeHeight=1+Math.max(this._getHeight(t.leftChild),this._getHeight(t.rightChild))}_rebalanceHeavyLeft(t){if(this._getHeight(t.leftChild)>this._getHeight(t.rightChild)+1){const e=t.leftChild;return t.leftChild=e.rightChild,e.rightChild=t,this._updateHeight(t),this._updateHeight(e),e}return this._updateHeight(t),t}_rebalanceHeavyRight(t){if(this._getHeight(t.rightChild)>this._getHeight(t.leftChild)+1){const e=t.rightChild;return t.rightChild=e.leftChild,e.leftChild=t,this._updateHeight(t),this._updateHeight(e),e}return this._updateHeight(t),t}_insert(t,e){if(t){const i=o._compare(t,e);return i<0?(t.leftChild=this._insert(t.leftChild,e),this._rebalanceHeavyLeft(t)):i>0?(t.rightChild=this._insert(t.rightChild,e),this._rebalanceHeavyRight(t)):e}return e.treeHeight=1,e.leftChild=null,e.rightChild=null,e}insert(t){this._root=this._insert(this._root,t)}_remove(t,e){if(t){const i=o._compare(t,e);return i<0?(t.leftChild=this._remove(t.leftChild,e),this._rebalanceHeavyRight(t)):i>0?(t.rightChild=this._remove(t.rightChild,e),this._rebalanceHeavyLeft(t)):null}return null}remove(t){this._root=this._remove(this._root,t),t.treeHeight=1,t.leftChild=null,t.rightChild=null}render(t,e,i,s,n,r){this._renderContext.render(t,e,i,s,n,this._root,r)}}!function(t){t.ElementManager=class{constructor(e){this._database=new t.Database,this._view=e,this._elements=new o(e)}spawn(t,e,i,s,r,o=null){const h=new n(this._elements,t,e,i,s,r);return o&&this._database.insert(o,h),h}spawnDefault(t,e,i,s,n=null){return this.spawn(t,"default",e,i,s)}*query(t){return this._database.query(t)}queryFirst(t){for(const e of this.query(t))return e;throw new Error(`element not found for ${JSON.stringify(t)}`)}render(t,e,i){this._elements.render(t.context,this._view.x*i.x,this._view.y*i.y,this._view.width,this._view.height,e)}}}(l||(l={}));l.ElementManager;!function(t){let e;!function(t){class e{constructor(t,e,i,s){this.traits=t,this.name=e,this.description=i,this._value=s}getValue(){return this._value}setValue(t){this._value=t}toString(){return this.traits.unparse(this._value)}push(t,e,i=null){const s=this._value;this._value=t;try{return e.call(i)}finally{this._value=s}}}const i=Object.create(null);let s=!1;function n(t,s,n,r=""){if(s in i)throw new Error(`flag ${JSON.stringify(s)} is defined twice`);return i[s]=new e(t,s,r,n)}t.define=n;class r{static parse(t){if(!t.length)return!0;if("true"===t.toLowerCase())return!0;const e=parseInt(t);return!isNaN(e)&&!e}static unparse(t){return""+!!t}}t.defineBoolean=function(t,e,i=""){return n(r,t,e,i)};class o{static parse(t){return t}static unparse(t){return t}}t.defineString=function(t,e,i=""){return n(o,t,e,i)};class h{static parse(t){return parseInt(t)}static unparse(t){return""+~~t}}t.defineInt=function(t,e,i=""){return n(h,t,e,i)};class l{static parse(t){return parseFloat(t)}static unparse(t){return""+ +t}}t.defineFloat=function(t,e,i=""){return n(l,t,e,i)};class a{static parse(t){return new Date(t)}static unparse(t){return t.toISOString()}}t.defineTime=function(t,e,i=""){return n(a,t,e,i)};class _{static parse(t){return JSON.parse(t)}static unparse(t){return JSON.stringify(t)}}function u(t){if(t in i)return i[t];throw new Error(`flag ${JSON.stringify(t)} is undefined`)}function c(){if(s)return;s=!1;const t=Object.create(null);window.location.search.replace(/^\?/,"").split("&").filter(t=>t.length>0).forEach(e=>{const i=e.indexOf("=");if(i<0)t[decodeURIComponent(e)]="";else{const s=decodeURIComponent(e.slice(0,i)),n=decodeURIComponent(e.slice(i+1));t[s]=n}});for(const e in t)if(e in i){const s=i[e].traits.parse(t[e]);i[e].setValue(s)}else console.warn(`URL has undefined flag ${JSON.stringify(e)}`)}t.defineJSON=function(t,e,i=""){return n(_,t,e,i)},t.getFlag=function(t){return u(t).getValue()},t.pushFlag=function(t,e,i,s=null){return u(t).push(e,i,s)},window.addEventListener("DOMContentLoaded",(function t(){window.removeEventListener("DOMContentLoaded",t,!1),c()}),!1),t.parse=function(){s?console.log("flags have already been parsed, will not parse again"):c()}}(e=t.Flags||(t.Flags={}))}(l||(l={})),function(t){t.Keyboard=class{constructor(t=window){this._state=Object.create(null),this._handlers=Object.create(null),this._element=t,this._onKeyDown=this._onKeyDown.bind(this),this._onKeyUp=this._onKeyUp.bind(this),this._element.addEventListener("keydown",this._onKeyDown,!1),this._element.addEventListener("keyup",this._onKeyUp,!1)}_onKeyDown(t){var e,i;const s=t.code;this._state[s]||(this._state[s]=!0,null===(i=(e=this._handlers)[s])||void 0===i||i.call(e,s))}_onKeyUp(t){this._state[t.code]=!1}isPressed(t){return!!this._state[t]}on(t,e){return this._handlers[t]=e,this}off(t){return delete this._handlers[t],this}destroy(){this._element.removeEventListener("keydown",this._onKeyDown,!1),this._element.removeEventListener("keyup",this._onKeyUp,!1);for(const t in this._handlers)delete this._handlers[t]}}}(l||(l={})),function(t){t.DefaultLayer=class{constructor(e){this.enabled=!0,this.parallax={x:1,y:1},this._view=e,this._elements=new t.ElementManager(e)}render(t,e){this.enabled&&this._elements.render(t,e,this.parallax)}}}(l||(l={}));l.DefaultLayer;!function(t){t.LayerManager=class{constructor(){this._layers=[]}get count(){return this._layers.length}_checkIndex(t){if(t<0)throw new Error("layer index cannot be negative");if(t>=this._layers.length)throw new Error(`layer index out of bounds: ${t} > ${this._layers.length-1}`);return t}getAt(t){return this._layers[this._checkIndex(t)]}insert(t,e){this._layers.splice(e,0,t)}insertDefault(e,i){this.insert(new t.DefaultLayer(e),i)}insertAbove(t){this.insert(t,0)}insertDefaultAbove(e){this.insert(new t.DefaultLayer(e),0)}insertBelow(t){this.insert(t,this._layers.length)}insertDefaultBelow(e){this.insert(new t.DefaultLayer(e),this._layers.length)}removeAt(t){this._layers.splice(this._checkIndex(t),1)}render(t,e){for(let i=0;i<this._layers.length;i++)this._layers[i].render(t,e)}}}(l||(l={}));l.LayerManager;!function(t){class e{static loadImage(t){return new Promise((e,i)=>{const s=new Image;s.onload=()=>{s.onload=null,s.onerror=null,e(s)},s.onerror=()=>{s.onload=null,s.onerror=null,i(`error loading ${t}`)},s.src=t})}static loadImages(t){return Promise.all(t.map(t=>e.loadImage(t)))}static loadSound(t){return new Promise((e,i)=>{const s=new Audio(t);s.oncanplaythrough=()=>{s.oncanplaythrough=null,s.onerror=null,e(s)},s.onerror=()=>{s.oncanplaythrough=null,s.onerror=null,i(`error loading ${t}`)},s.load()})}static loadSounds(t){return Promise.all(t.map(t=>e.loadSound(t)))}}t.Loader=e}(l||(l={})),function(t){let e=(()=>{class t{constructor(t){this._state=Object.create(null),this._downHandlers=Object.create(null),this._upHandlers=Object.create(null),this._moveHandler=null,this._x=0,this._y=0,this._element=t,this._onDown=this._onDown.bind(this),this._onUp=this._onUp.bind(this),this._onMove=this._onMove.bind(this),t.addEventListener("mousedown",this._onDown,!1),t.addEventListener("mouseup",this._onUp,!1),t.addEventListener("mousemove",this._onMove,!1)}_onDown(e){var i,s;const n=t._BUTTONS[e.button];this._state[n]||(this._state[n]=!0,null===(s=(i=this._downHandlers)[n])||void 0===s||s.call(i,e.clientX,e.clientY,n))}_onUp(e){var i,s;const n=t._BUTTONS[e.button];this._state[n]&&(this._state[n]=!1,null===(s=(i=this._upHandlers)[n])||void 0===s||s.call(i,e.clientX,e.clientY,n))}_onMove(t){var e;this._x=t.clientX,this._y=t.clientY,null===(e=this._moveHandler)||void 0===e||e.call(this,this._x,this._y)}get position(){return{x:this._x,y:this._y}}isDown(t){return!!this._state[t]}onDown(t,e){return this._downHandlers[t]=e,this}onUp(t,e){return this._upHandlers[t]=e,this}onMove(t){return this._moveHandler=t,this}destroy(){this._element.removeEventListener("mousedown",this._onDown,!1),this._element.removeEventListener("mouseup",this._onUp,!1),this._element.removeEventListener("mousemove",this._onMove,!1),t._BUTTONS.forEach(t=>{delete this._downHandlers[t],delete this._upHandlers[t]},this),this._moveHandler=null}}return t._BUTTONS=["Left","Middle","Right","Back","Forward"],t})();t.Mouse=e}(l||(l={})),function(t){t.RenderLoop=class{constructor(e){this.layers=new t.LayerManager,this._running=!1,this._canvas=new t.Canvas(e),this.render=this.render.bind(this)}start(){this._running||(this._running=!0,window.requestAnimationFrame(this.render))}stop(){this._running=!1}render(t){this.layers.render(this._canvas,t),this._running&&window.requestAnimationFrame(this.render)}}}(l||(l={}));var h=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,r){function o(t){try{l(s.next(t))}catch(t){r(t)}}function h(t){try{l(s.throw(t))}catch(t){r(t)}}function l(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(o,h)}l((s=s.apply(t,e||[])).next())}))};!function(t){class e{constructor(t){t.addEventListener("ended",e._resetElement),this._elements=[t]}static _resetElement(t){t.target&&(t.target.currentTime=0)}play(){return h(this,void 0,void 0,(function*(){for(let t=0;t<this._elements.length;t++)if(!this._elements[t].currentTime)return void(yield this._elements[t].play());const t=this._elements[0].cloneNode(!1);t.addEventListener("ended",e._resetElement),this._elements.push(t),yield t.play()}))}}t.Sound=class{constructor(t,e){this._pools=Object.create(null),this._initialize(t,e)}_initialize(i,s){return h(this,void 0,void 0,(function*(){i=i.replace(/\/$/,"");const n=yield t.Loader.loadSounds(s.map(t=>`${i}/${t}`));s.forEach((t,i)=>{const s=t.replace(/\.[^.\/]+$/,"");if(s in this._pools)throw new Error(`duplicate sound entry: ${s}`);this._pools[s]=new e(n[i])},this)}))}play(t){return h(this,void 0,void 0,(function*(){return t in this._pools&&(yield this._pools[t].play(),!0)}))}}}(l||(l={})),function(t){let e;!function(t){t.DeBoorContext=class{constructor(t,e,i){this._x=[],this._y=[],this._z=[],this._w=[],this._index=0,this._knots=t,this._multiplicity=e,this._controlPoints=i,this.reset()}reset(){this._x.length=this._controlPoints.length,this._y.length=this._controlPoints.length,this._z.length=this._controlPoints.length,this._w.length=this._controlPoints.length,this._index=0}run(t,e){const i=this._knots.length-1-(this._controlPoints.length-1)-1,s=e>this._knots[t]?0:Math.min(i,this._multiplicity[t]),n=i-s;for(let e=t-s;e>=t-i;e--){const{x:t,y:i,z:s,w:n}=this._controlPoints[e];this._x[e]=t,this._y[e]=i,this._z[e]=s,this._w[e]=n}for(let r=1;r<=n;r++)for(let n=t-s;n>=t-i+r;n--){const t=(e-this._knots[n])/(this._knots[n+i-r+1]-this._knots[n]);this._x[n]=(1-t)*this._x[n-1]+t*this._x[n],this._y[n]=(1-t)*this._y[n-1]+t*this._y[n],this._z[n]=(1-t)*this._z[n-1]+t*this._z[n],this._w[n]=(1-t)*this._w[n-1]+t*this._w[n]}return this._index=t-s,this}get x(){return this._x[this._index]}get y(){return this._y[this._index]}get z(){return this._z[this._index]}get w(){return this._w[this._index]}}}(e=t.NURBS||(t.NURBS={}))}(l||(l={}));l.NURBS.DeBoorContext;!function(e){let i;!function(e){class i{constructor(t,i,s,n){this._knots=t,this._multiplicity=i,this._controlPoints=s,this._resolution=n,this._deBoor=new e.DeBoorContext(t,i,s);const r=this._knots.length-1,o=r-(this._controlPoints.length-1)-1;this._min=this._knots[o],this._max=this._knots[r-o],this._k=o,this._i=0}_step(){const t=this._controlPoints.length-1,e=this._min,i=this._max,s=e+this._i++*(i-e)/this._resolution;for(;this._k<t&&s>=this._knots[this._k+1];)this._k++;return s}next(){if(this._i<=this._resolution){const t=this._step(),{x:e,y:i,z:s,w:n}=this._deBoor.run(this._k,t);return{done:!1,value:{x:e/n,y:i/n,z:s/n}}}return{done:!0,value:void 0}}}class s{constructor(t,i){this._knots=[],this._multiplicity=[],this._controlPoints=[],this.resolution=100,this._deBoor=new e.DeBoorContext(this._knots,this._multiplicity,this._controlPoints),this.reset(t,i)}get knotCount(){return this._knots.length}get controlPointCount(){return this._controlPoints.length}get degree(){return this._knots.length-1-(this._controlPoints.length-1)-1}isStrict(){const t=this.degree+1;if(this._multiplicity.length<2*t)return!1;{const e=this._multiplicity.length-1;for(let i=0;i<t;i++)if(this._multiplicity[i]!==t||this._multiplicity[e-t]!==t)return!1;return!0}}_checkKnotIndex(t){if(t>=0&&t<this._knots.length)return t;throw new Error(`index ${t} out of bounds [0, ${this._knots.length})`)}_checkControlPointIndex(t){if(t>=0&&t<this._controlPoints.length)return t;throw new Error(`index ${t} out of bounds [0, ${this._controlPoints.length})`)}getKnot(t){return this._knots[this._checkKnotIndex(t)]}getKnots(){return this._knots.slice()}getControlPoint(t){const{x:e,y:i,z:s,w:n}=this._controlPoints[this._checkControlPointIndex(t)];return{x:e,y:i,z:s,w:n}}getControlPoints(){return this._controlPoints.map(({x:t,y:e,z:i,w:s})=>({x:t,y:e,z:i,w:s}))}setKnot(t,e){this._knots[this._checkKnotIndex(t)]=e}_setKnots(e){const i=Math.min.apply(Math,e),s=Math.max.apply(Math,e);t(this._knots,e.map(t=>(t-i)/(s-i)).sort((t,e)=>t-e)),t(this._multiplicity,this._knots.map(()=>1));for(let t=1,e=0;t<=this._knots.length;t++)if(t>this._knots.length-1||this._knots[t]>this._knots[t-1]){for(let i=e;i<t;i++)this._multiplicity[i]=t-e;e=t}}setKnots(t){if(t.length<=this._controlPoints.length)throw new Error(`a curve with ${this._controlPoints.length} control points must have `+`at least ${this._controlPoints.length+1} knots (${t.length} `+"were provided)");this._setKnots(t)}setControlPoint(t,e){const{x:i,y:s,z:n,w:r}=e,o=this._controlPoints[this._checkControlPointIndex(t)];o.x=i,o.y=s,o.z=n,o.w=r}_setControlPoints(e){t(this._controlPoints,e.map(({x:t,y:e,z:i,w:s})=>({x:t,y:e,z:i,w:s})))}setControlPoints(t){if(t.length>=this._knots.length)throw new Error(`a curve with ${this._knots.length} knots can have at most `+`${this._knots.length-1} control points (${t.length} `+"were provided)");this._setControlPoints(t)}reset(t,e){if(e.length>=t.length)throw new Error("the number of knots must be greater than the number of control points");this._setKnots(t),this._setControlPoints(e)}createDeBoorContext(){return new e.DeBoorContext(this._knots,this._multiplicity,this._controlPoints)}_getK(t){const e=this._knots.length-1,i=e-(this._controlPoints.length-1)-1;let s=i,n=e-i+1;for(;n>s;){const e=s+n>>>1;if(t<this._knots[e])n=e;else{if(!(t>this._knots[e]))return e;if(t<this._knots[e+1])return e;s=e+1}}return t>=this._knots[s]&&t<this._knots[s+1]?s:-1}get domain(){const t=this._knots.length-1,e=t-(this._controlPoints.length-1)-1;return[this._knots[e],this._knots[t-e]]}sample(t){this._deBoor.reset();const e=this._getK(t);if(e<0)return null;const{x:i,y:s,z:n,w:r}=this._deBoor.run(e,t);return{x:i/r,y:s/r,z:n/r}}[Symbol.iterator](){return new i(this._knots,this._multiplicity,this._controlPoints,this.resolution)}renderCurve(t){const e=this._knots.length-1,i=this._controlPoints.length-1,s=e-i-1,n=this._knots[s],r=this._knots[e-s];this._deBoor.reset();let o=s;for(;o<i&&n>=this._knots[o+1];)o++;{const{x:e,y:i,z:s,w:r}=this._deBoor.run(o,n);t.first(e/r,i/r,s/r)}for(let e=1;e<=this.resolution;e++){const s=n+e*(r-n)/this.resolution;for(;o<i&&s>=this._knots[o+1];)o++;const{x:h,y:l,z:a,w:_}=this._deBoor.run(o,s);t.next(h/_,l/_,a/_)}t.end()}renderPolyLine(t){{const{x:e,y:i,z:s,w:n}=this._controlPoints[0];t.first(e,i,s,n)}for(let e=1;e<this._controlPoints.length;e++){const{x:i,y:s,z:n,w:r}=this._controlPoints[e];t.next(i,s,n,r)}t.end()}clone(){return new s(this._knots,this._controlPoints)}transform(t){const e=t;for(let t=0;t<this._controlPoints.length;t++){const i=this._controlPoints[t],{x:s,y:n,z:r}=i;i.x=e[0]*s+e[1]*n+e[2]*r,i.y=e[3]*s+e[4]*n+e[5]*r,i.z=e[6]*s+e[7]*n+e[8]*r}}translate(t,e,i){for(let s=0;s<this._controlPoints.length;s++){const n=this._controlPoints[s];n.x+=t,n.y+=e,n.z+=i}}derive(){const t=this._knots.length-1,e=this._controlPoints.length-1,i=t-e-1,n=Array(e);for(let t=1;t<this._controlPoints.length;t++){const e=i/(this._knots[t+i]-this._knots[t]),{x:s,y:r,z:o,w:h}=this._controlPoints[t-1],{x:l,y:a,z:_,w:u}=this._controlPoints[t];n[t-1]={x:e*(l-s),y:e*(a-r),z:e*(_-o),w:e*(u-h)}}return new s(this._knots.slice(1,this._knots.length-1),n)}}e.Curve=s}(i=e.NURBS||(e.NURBS={}))}(l||(l={}));l.NURBS.Curve;var l;!function(e){let i;!function(e){class i{constructor(t,e,i){this._knots=t,this._multiplicity=e,this._controlPoints=i,this.reset()}reset(){const t=this._controlPoints.map(t=>new e.DeBoorContext(this._knots.v,this._multiplicity.v,t)),i=new e.DeBoorContext(this._knots.u,this._multiplicity.u,t);this._deBoor={u:i,v:t}}run(t,e,i,s){for(let t=0;t<this._deBoor.v.length;t++)this._deBoor.v[t].run(e,s);return this._deBoor.u.run(t,i),this}get x(){return this._deBoor.u.x}get y(){return this._deBoor.u.y}get z(){return this._deBoor.u.z}get w(){return this._deBoor.u.w}}class s{constructor(t,e,i){this._knots={u:[],v:[]},this._multiplicity={u:[],v:[]},this._controlPoints=[],this.resolution={u:100,v:100},this.reset(t,e,i)}get knotCount(){return{u:this._knots.u.length,v:this._knots.v.length}}get degree(){return{u:this._knots.u.length-1-(this._controlPoints.length-1)-1,v:this._knots.v.length-1-(this._controlPoints[0].length-1)-1}}get domain(){const t=this._knots.u.length-1,e=t-(this._controlPoints.length-1)-1,i=this._knots.v.length-1,s=i-(this._controlPoints[0].length-1)-1;return{u:[this._knots.u[e],this._knots.u[t-e]],v:[this._knots.v[s],this._knots.v[i-s]]}}_isStrict(t,e){const i=t+1;if(e.length<2*i)return!1;{const t=e.length-1;for(let s=0;s<i;s++)if(e[s]!==i||e[t-i]!==i)return!1;return!0}}isStrict(){const t=this._knots.u.length-1,e=this._controlPoints.length-1,i=this._knots.v.length-1,s=this._controlPoints[0].length-1;return{u:this._isStrict(t-e-1,this._multiplicity.u),v:this._isStrict(i-s-1,this._multiplicity.v)}}static _checkKnotIndex(t,e){if(e>=0&&e<t.length)return e;throw new Error(`index ${e} out of bounds [0, ${t.length})`)}getUKnot(t){return this._knots.u[s._checkKnotIndex(this._knots.u,t)]}getVKnot(t){return this._knots.v[s._checkKnotIndex(this._knots.v,t)]}getUKnots(){return this._knots.u.slice()}getVKnots(){return this._knots.v.slice()}getKnots(){return{u:this._knots.u.slice(),v:this._knots.v.slice()}}static _sanitizeKnots(e){const i={knots:[],multiplicity:[]},s=Math.min.apply(Math,e),n=Math.max.apply(Math,e);t(i.knots,e.map(t=>(t-s)/(n-s)).sort((t,e)=>t-e)),t(i.multiplicity,i.knots.map(()=>1));for(let t=1,e=0;t<=i.knots.length;t++)if(t>i.knots.length-1||i.knots[t]>i.knots[t-1]){for(let s=e;s<t;s++)i.multiplicity[s]=t-e;e=t}return i}setUKnot(t,e){this._knots.u[s._checkKnotIndex(this._knots.u,t)]=e}setVKnot(t,e){this._knots.v[s._checkKnotIndex(this._knots.v,t)]=e}setUKnots(t){const e=this._controlPoints.length;if(t.length<=e)throw new Error(`a surface with ${e} control point rows must have at least ${e+1} `+`U knots (${t.length} were provided)`);const{knots:i,multiplicity:n}=s._sanitizeKnots(t);this._knots.u=i,this._multiplicity.u=n}setVKnots(t){const e=this._controlPoints[0].length;if(t.length<=e)throw new Error(`a surface with ${e} control point columns must have at least `+`${e+1} V knots (${t.length} were provided)`);const{knots:i,multiplicity:n}=s._sanitizeKnots(t);this._knots.v=i,this._multiplicity.v=n}setKnots(t,e){this.setUKnots(t),this.setVKnots(e)}_checkControlPointIndex(t,e){if(t<0||t>=this._controlPoints.length)throw new Error(`index ${t} out of bounds [0, ${this._controlPoints.length})`);if(e<0||e>=this._controlPoints[0].length)throw new Error(`index ${e} out of bounds [0, ${this._controlPoints[0].length})`)}getControlPoint(t,e){this._checkControlPointIndex(t,e);const{x:i,y:s,z:n,w:r}=this._controlPoints[t][e];return{x:i,y:s,z:n,w:r}}getControlPoints(){return this._controlPoints.map(t=>t.map(({x:t,y:e,z:i,w:s})=>({x:t,y:e,z:i,w:s})))}setControlPoint(t,e,i){this._checkControlPointIndex(t,e);const{x:s,y:n,z:r,w:o}=i,h=this._controlPoints[t][e];h.x=s,h.y=n,h.z=r,h.w=o}static _checkParameters(t,e){if(e.length<1)throw new Error("there must be at least 1 control point row");e.forEach(t=>{if(t.length<1)throw new Error("there must be at least 1 control point column")});const i=t.u.length,s=e.length,n=t.v.length,r=e[0].length;for(let t=0;t<s;t++)if(e[t].length!==r)throw new Error("inconsistent number of columns in control point grid: "+`${JSON.stringify(e.map(t=>t.length))}`);if(s>=i)throw new Error(`a surface with ${i} U knots can have at most ${i-1} control `+`point rows (${s} were provided)`);if(r>=n)throw new Error(`a surface with ${n} V knots can have at most ${n-1} control `+`point columns (${r} were provided)`)}setControlPoints(t){s._checkParameters(this._knots,t),this._controlPoints=t.map(t=>t.map(({x:t,y:e,z:i,w:s})=>({x:t,y:e,z:i,w:s})))}reset(t,e,n){s._checkParameters({u:t,v:e},n);let r=s._sanitizeKnots(t);this._knots.u=r.knots,this._multiplicity.u=r.multiplicity,r=s._sanitizeKnots(e),this._knots.v=r.knots,this._multiplicity.v=r.multiplicity,this._controlPoints=n.map(t=>t.map(({x:t,y:e,z:i,w:s})=>({x:t,y:e,z:i,w:s}))),this._sampler=new i(this._knots,this._multiplicity,this._controlPoints)}_getK(t,e,i){let s=e,n=t.length-1-e+1;for(;n>s;){const e=s+n>>>1;if(i<t[e])n=e;else{if(!(i>t[e]))return e;if(i<t[e+1])return e;s=e+1}}return i>=t[s]&&i<t[s+1]?s:-1}_getC(t){const e=this._knots.u.length-1,i=this._controlPoints.length-1;return this._getK(this._knots.u,e-i-1,t)}_getD(t){const e=this._knots.v.length-1,i=this._controlPoints[0].length-1;return this._getK(this._knots.v,e-i-1,t)}sample(t,e){const i=this._getC(t),s=this._getD(e);this._sampler.reset(),this._sampler.run(i,s,t,e);const{x:n,y:r,z:o}=this._sampler;return{x:n,y:r,z:o}}iterate(t){const e=this._knots.u.length-1,i=this._controlPoints.length-1,s=e-i-1,n=this._knots.v.length-1,r=this._controlPoints[0].length-1,o=n-r-1,h=this._knots.u[s],l=this._knots.u[e-s],a=this._knots.v[o],_=this._knots.v[n-o];this._sampler.reset();let u=s;for(;u<i&&h>=this._knots.u[u+1];)u++;for(let e=0;e<=this.resolution.u;e++){const s=h+e*(l-h)/this.resolution.u;for(;u<i&&s>=this._knots.u[u+1];)u++;t.startRow();let n=o;for(;n<r&&a>=this._knots.v[n+1];)n++;for(let e=0;e<=this.resolution.v;e++){const i=a+e*(_-a)/this.resolution.v;for(;n<r&&i>=this._knots.v[n+1];)n++;const{x:o,y:h,z:l,w:c}=this._sampler.run(u,n,s,i);t.point(o/c,h/c,l/c)}}t.end()}clone(){return new s(this._knots.u,this._knots.v,this._controlPoints)}transform(t){const e=t;for(let t=0;t<this._controlPoints.length;t++)for(let i=0;i<this._controlPoints[t].length;i++){const s=this._controlPoints[t][i],{x:n,y:r,z:o}=s;s.x=e[0]*n+e[1]*r+e[2]*o,s.y=e[3]*n+e[4]*r+e[5]*o,s.z=e[6]*n+e[7]*r+e[8]*o}}translate(t,e,i){for(let s=0;s<this._controlPoints.length;s++)for(let n=0;n<this._controlPoints[s].length;n++){const r=this._controlPoints[s][n];r.x+=t,r.y+=e,r.z+=i}}}e.Surface=s}(i=e.NURBS||(e.NURBS={}))}(l||(l={}));l.NURBS.Surface;return l}));